

#ifndef INC_USART_H_
#define INC_USART_H_

#include "stm32f407xx.h"

/*
 *
 * @def_group MODE_Types
 *
 */

#define USART_MODE_Tx			( (uint32_t)(0x00000008) )
#define USART_MODE_Rx			( (uint32_t)(0x00000004) )
#define USART_MODE_Tx_Rx		( (uint32_t)(0x0000000C) )

/*
 *
 * @def_group WordLength_Types
 *
 */

#define USART_WORDLENGTH_8Bits	( (uint32_t)(0x00000000) )
#define USART_WORDLENGTH_9Bits	( (uint32_t)(0x00001000) )

/*
 *
 * @def_group Parity_Modes
 *
 */

#define USART_PARITY_NONE		( (uint32_t)(0x00000000) )
#define USART_PARITY_Even		( (uint32_t)(0x00000400) )
#define USART_PARITY_Odd		( (uint32_t)(0x00000600) )

/*
 *
 * @def_group Stop_Bits
 *
 */

#define USART_STOPBITS_1		( (uint32_t)(0x00000000) )
#define USART_STOPBITS_Half		( (uint32_t)(0x00001000) )
#define USART_STOPBITS_2		( (uint32_t)(0x00002000) )
#define USART_STOPBITS_1_Half	( (uint32_t)(0x00003000) )

/*
 *
 * @def_group OverSampling_Modes
 *
 */

#define USART_OVERSAMPLE_16		( (uint32_t)(0x00000000) )
#define USART_OVERSAMPLE_8		( (uint32_t)(0x00008000) )

/*
 *
 * @def_group HardWareFlowControl_Modes
 *
 */

#define USART_HW_NONE			( (uint32_t)(0x00000000) )
#define USART_HW_CTS			( (uint32_t)(0x00000200) )
#define USART_HW_RTS			( (uint32_t)(0x00000100) )
#define USART_HW_CTS_RTS		( (uint32_t)(0x00000300) )


typedef struct
{
	uint32_t Mode; 						/*<! Transmission Reception modes @def_group MODE_Types	 */
	uint32_t WordLength;				/*<! 8 Bits & 9 Bits modes @def_group WordLength_Types	 */
	uint32_t Parity;					/*<! Even & Odd Parity modes @def_group Parity_Modes	 */
	uint32_t StopBits;					/*<! Stop Bits modes @def_group Stop_Bits				 */
	uint32_t OverSampling;				/*<! OverSampling modes @def_group OverSampling_Modes	 */
	uint32_t HardWareFlowControl;		/*<! HardWareFlowControl modes @def_group HardWareFlowControl_Modes	 */
	uint32_t BaudRate;



}USART_InitTypedef_t;

typedef struct
{
	USART_Typedef_t *Instance;
	USART_InitTypedef_t Init;

}USART_HandleTypedef_t;


#endif /* INC_USART_H_ */
